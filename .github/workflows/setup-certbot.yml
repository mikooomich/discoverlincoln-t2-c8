# Generate SSL certificates using Certbot. This must run only after the instance has been configured 
# with a NGINX reverse proxy and the DNS records have been set through the domain provider.
# Secrets:
#  - GH_TOKEN: token for accessing deployment-scripts repo
#  - HOST_USER: user for SSH access to instance. e.g. bitnami
#  - HOST_IP: IP address of instance
#  - PRIVATE_SSH_KEY: private key for SSH access to instance
#  Variables:
#  - CERTBOT_EMAIL: email address to use for SSL certificates

name: Setup Certbot

on:
  workflow_dispatch:
    inputs:
      certbotEmail:
        description: 'certbot email'
        type: string
        required: true
  workflow_call:
    inputs:
      hostIP:
        description: 'IP address of instance'
        type: string
        required: false
      hostName:
        description: 'Name of instance user'
        type: string
        required: false
      certbotEmail:
        description: 'certbot email'
        type: string
        required: false

jobs:
  setup_certbot:
    runs-on: ubuntu-latest

    steps:
    - name: pull deployment-scripts repo
      uses: actions/checkout@v3
      with:
        repository: Civiconnect/deployment-scripts
        ref: v1
        token: ${{ secrets.GH_TOKEN }}
        path: './deployment_scripts'

    - name: Run playbook
      uses: dawidd6/action-ansible-playbook@v2
      with:
        playbook: setup-certbot.ansible.yml
        directory: ./deployment_scripts/ansible
        key: ${{secrets.PRIVATE_SSH_KEY}}
        inventory: |
          [remote]
          ${{ inputs.hostName || secrets.HOST_USER }}@${{ inputs.hostIP || secrets.HOST_IP }}
        options: |
          --extra-vars "{HOST: remote, CERTBOT_EMAIL: "${{inputs.certbotEmail || secrets.CERTBOT_EMAIL }}", DOMAIN: "${{ secrets.DOMAIN }}", DOMAIN_PRODUCTION: "${{ secrets.DOMAIN_PRODUCTION }}", STRAPI_DOMAIN_PREFIX: "${{ secrets.STRAPI_DOMAIN_PREFIX }}"}"
          --verbose
